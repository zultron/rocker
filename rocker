#!/bin/bash -e

# Host UID/GID
HUID=$(id -u)
HGID=$(id -g)

usage() {
    if test -z "$*"; then
        RC=0
    else
        echo "Error:  $*" >&2
        RC=1
    fi
    cat >&2 <<-EOF
	Usage: $0 [-n NAME] [-i IMAGE] [COMMAND [ARGS...]]
	    -n NAME:  Set container name and hostname to NAME (default: rocker)
	    -i IMAGE: Docker image tag to run
	    COMMAND:  Command to run (default:  /bin/bash)
	    ARGS:     Command arguments
	EOF
    exit $RC
}

# Custom entrypoint
ENTRYPOINT=$(dirname $0)/rocker_entrypoint

# Defaults
ROCKER_NAME=${ROCKER_NAME:-rocker}

# Read from any .rocker config
if test -f $(pwd)/.rocker; then
    source $(pwd)/.rocker
fi

# Command line overrides .rocker config
while getopts :n:i: ARG; do
    case $ARG in
	# Run options
	n) ROCKER_NAME=$OPTARG ;;
	i) ROCKER_IMAGE_TAG=$OPTARG ;;
	# Usage
	h) usage ;;
	:) usage "Option -$OPTARG requires an argument" ;;
	*) usage "Illegal option -$OPTARG" ;;
    esac
done
shift $(($OPTIND - 1))

# Check arguments
test -n "$ROCKER_IMAGE_TAG" || usage "No image tag specified"

# Construct `docker run` args
DOCKER_RUN_ARGS=(
    docker run
    -it --rm
    # container & host names
    --name $ROCKER_NAME
    -h $ROCKER_NAME
    # user config
    -e HUID=$HUID
    -e HGID=$HGID
    -e HHOME=$HOME
    -e HUSER=$USER
    -e XDG_RUNTIME_DIR
    -v $XDG_RUNTIME_DIR:$XDG_RUNTIME_DIR
    -v $HOME:$HOME
    # display
    -e TERM
    -e DISPLAY
    -v /tmp/.X11-unix:/tmp/.X11-unix
    -v /dev/dri:/dev/dri
    # audio
    -v /run/user/$HUID/pulse:/run/user/$HUID/pulse
    # container start-up config
    -w $PWD
    -v $ENTRYPOINT:/usr/bin/entrypoint
    --entrypoint /usr/bin/entrypoint
    --init
    $ROCKER_IMAGE_TAG
    "$@"
)

set -x
exec "${DOCKER_RUN_ARGS[@]}"
